<?xml version="1.0" encoding="utf-8"?><xml PATH="/usr/local/tomcat/webapps/trinity/WEB-INF/Anaconda/BizDir/dev.smartsdlc.com/BC_SEQ_109413344941626910814289.xml" USER="null" id="BC_SEQ_109413344941626910814289"><BC_SEQ_109413344941626910814289 AnacondaRule="null" BIZ_COLLECTION_CACHE_TIME="0" BIZ_COLLECTION_COUNT="1" BIZ_COLLECTION_KOR_NAME="텔레그램에서 가입 및 두나 생성" COLLECTION_INTERCEPTER="" KIND="COLLECTION" aop_intercepter="" aop_point_class="&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;" aop_point_method="&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;" business_rule="null" id="BC_SEQ_109413344941626910814289" referenceKey="null"><enterDunaSite JNDINAME="BC_SEQ_109184840121497847031986" KIND="DATA" OWNER="sa" REMOTE="false" TYPE="BC" aop_intercepter="com.stuko.anaconda.intercepter.SimpleBusinessIntercepter" aop_point_method="import com.stuko.anaconda.business.*;&lt;BR&gt;&lt;BR&gt;if(!BusinessHelper.checkNull(request.getFieldValue(&quot;email&quot;))&lt;BR&gt;|| !BusinessHelper.checkNull(request.getFieldValue(&quot;password&quot;))&lt;BR&gt;|| !BusinessHelper.checkNull(request.getFieldValue(&quot;team&quot;))&lt;BR&gt;){&lt;BR&gt;  This.doProcessExit(true);&lt;BR&gt;}">
</enterDunaSite><getMemberInfo DATASOURCE="java:comp/env/jdbc/SPDB" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Select Account, Email From Member Where Email = ?" TYPE="SQL" aop_intercepter="com.stuko.anaconda.intercepter.SimpleBusinessIntercepter" aop_point_class="import com.stuko.anaconda.business.*;&lt;BR&gt;&lt;BR&gt;if(result.getReturnObject(&quot;getMemberInfo&quot;) != null){&lt;BR&gt;  BusinessCollection bc = (BusinessCollection)result.getReturnObject(&quot;getMemberInfo&quot;);&lt;BR&gt;  request.setFieldValue(&quot;Account&quot;,bc.getBusinessData(0).getFieldValue(&quot;Account&quot;));&lt;BR&gt;  request.setFieldValue(&quot;Email&quot;,bc.getBusinessData(0).getFieldValue(&quot;Email&quot;));&lt;BR&gt;  request.setFieldValue(&quot;session.Account&quot;,bc.getBusinessData(0).getFieldValue(&quot;Account&quot;));&lt;BR&gt;  request.setFieldValue(&quot;session.Email&quot;,bc.getBusinessData(0).getFieldValue(&quot;Email&quot;));&lt;BR&gt;}else{&lt;BR&gt;  This.doProcessExit(true);&lt;BR&gt;}&lt;BR&gt;">
<FIELD KIND="ITEM" LENGTH="0" NAME="email" SEQ="1" TYPE="STRING" VALUE=""/>
</getMemberInfo><acceptAccount DATASOURCE="java:comp/env/jdbc/SPDB" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Update Member Set Accept = 'Y' Where Account = ?" TYPE="SQL" aop_intercepter="com.stuko.anaconda.intercepter.SimpleBusinessIntercepter" aop_point_method="import com.stuko.anaconda.business.*;&lt;BR&gt;if(!BusinessHelper.checkNull(request.getFieldValue(&quot;session.Account&quot;))) This.doProcessExit(true);">
<FIELD KIND="ITEM" LENGTH="0" NAME="session.Account" SEQ="1" TYPE="STRING" VALUE=""/>
</acceptAccount><createChatBotDB JNDINAME="BC_SEQ_107051401671560743573347" KIND="DATA" OWNER="sa" REMOTE="false" TYPE="BC" aop_intercepter="com.stuko.anaconda.intercepter.SimpleBusinessIntercepter" aop_point_class="import com.stuko.anaconda.business.*;&lt;BR&gt;&lt;BR&gt;if(BusinessHelper.checkNull(request.getFieldValue(&quot;memberJndi&quot;))){&lt;BR&gt;   request.setFieldValue(&quot;session.jndi&quot;,request.getFieldValue(&quot;memberJndi&quot;));&lt;BR&gt;}">
</createChatBotDB><saveChatBot DATASOURCE="java:comp/env/jdbc/SPDB" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Insert into ChatBot(Token, SecretKey, ChatBotKey, ChatBotName, ChatBotChannel)&lt;BR&gt;SELECT Token, SecretKey, ? , ? , 'telegram' &lt;BR&gt;From ChatBotToken Where Account = ?" TYPE="SQL">
<FIELD KIND="ITEM" LENGTH="0" NAME="Token" SEQ="1" TYPE="STRING" VALUE=""/>
<FIELD KIND="ITEM" LENGTH="0" NAME="BotName" SEQ="2" TYPE="STRING" VALUE=""/>
<FIELD KIND="ITEM" LENGTH="0" NAME="session.Account" SEQ="3" TYPE="STRING" VALUE=""/>
</saveChatBot><saveChatBotToken DATASOURCE="session.jndi" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Insert into Chat(channelId , name, value) Values('telegram', 'token', ?)" TYPE="SQL">
<FIELD KIND="ITEM" LENGTH="0" NAME="Token" SEQ="1" TYPE="STRING" VALUE=""/>
</saveChatBotToken><saveChatBotName DATASOURCE="session.jndi" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Insert into Chat(channelId , name, value) Values('telegram', 'name', ?)" TYPE="SQL">
<FIELD KIND="ITEM" LENGTH="0" NAME="BotName" SEQ="1" TYPE="STRING" VALUE=""/>
</saveChatBotName><saveDefaultRule DATASOURCE="session.jndi" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Insert Into rule_context( context_name, rule, msg, rule_group) Values('샘플', '1 == 1', '안녕하세요', ?) " TYPE="SQL">
<FIELD KIND="ITEM" LENGTH="0" NAME="rule_group" SEQ="1" TYPE="KEY" VALUE="RC"><![CDATA[RC]]></FIELD>
</saveDefaultRule><refresh KIND="DATA" OWNER="sa" POJO_CLASS="com.stuko.trinity.mediator.impl.RESTCallerImpl" REMOTE="false" SERVICE_NAME="invoke" TYPE="POJO" aop_intercepter="com.stuko.anaconda.intercepter.SimpleBusinessIntercepter" aop_point_method="String url = &quot;http://49.247.7.108:8081/rest?container=DunaRuleContainer&amp;ruleRefresh=true&amp;clientId=&quot; ;&lt;BR&gt;url += request.getFieldValue(&quot;ChatBotToken&quot;);&lt;BR&gt;url += &quot;&amp;secretKey=&quot;;&lt;BR&gt;url += request.getFieldValue(&quot;SecretKey&quot;);&lt;BR&gt;url += &quot;&amp;channelId=&quot;;&lt;BR&gt;url += request.getFieldValue(&quot;ChatBotToken&quot;);&lt;BR&gt;&lt;BR&gt;request.setFieldValue(&quot;url&quot;,url);">
<FIELD KIND="ITEM" LENGTH="0" NAME="url" SEQ="1" TYPE="STRING" VALUE=""/>
<FIELD KIND="ITEM" LENGTH="0" NAME="method" SEQ="2" TYPE="STRING" VALUE="GET"><![CDATA[GET]]></FIELD>
</refresh><resultOK DATASOURCE="session.jndi" KIND="DATA" OWNER="sa" REMOTE="false" SERVICE_NAME="Select 'Y' as OK" TYPE="SQL">
</resultOK></BC_SEQ_109413344941626910814289></xml>